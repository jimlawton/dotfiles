# Mac/Linux specifics.
[includeIf "gitdir:/Users"]
    path = ~/dotfiles/gitconfig-macos
# FIXME: this also matches on Mac.
#[includeIf "gitdir:/home"]
#    path = ~/dotfiles/gitconfig-linux

# Personal/work Git identity.
[includeIf "gitdir:~/Work/"]
    path = ~/dotfiles/git-identity-work
[includeIf "gitdir:~/Personal/"]
    path = ~/dotfiles/git-identity-personal
[includeIf "gitdir:~/.local/share/chezmoi/"]
    path = ~/dotfiles/git-identity-personal

# Git aliases.
[include]
    path = ~/dotfiles/git-aliases

[apply]
	whitespace = nowarn

[branch]
	# Automatically set up pull to be --rebase
	autosetuprebase = always

[branch "master"]
	rebase = true
	autosetuprebase = true

[color]
    # ui = true is a superset of all the more specific color options
    #  as documented at http://book.git-scm.com/5_customizing_git.html
    # When set to always, always use colors in all git commands which are capable of colored output.
    # When false, never. When set to true or auto, use colors only when the output is to the terminal.
    # When more specific variables of color.* are set, they always take precedence over this setting.
    # Defaults to false.
	ui = auto
	# diff = auto
	# status = auto
	# branch = auto

[color "branch"]
	#current = yellow reverse
	#local = yellow
	#remote = green
[color "diff"]
	#meta = yellow bold
	#frag = magenta bold
	#old = red bold
	#new = green bold
[color "status"]
	#added = yellow
	#changed = green
	#untracked = cyan

[core]
	safecrlf = warn
	deltaBaseCacheLimit = 1G
	excludesfile = ~/.gitignore
	quotepath = false
#	autocrlf = input
#	editor = vim

[diff]
	algorithm = patience
	tool = bcomp

# This is for skipping diffing files, that you don't want to add to .gitignore.
# https://stackoverflow.com/questions/52623898/how-can-i-skip-some-files-while-taking-git-diff
[diff "nodiff"]
	command = /bin/true

[difftool]
	prompt = false

[difftool "bcomp"]
    trustExitCode = true
    cmd = "/usr/local/bin/bcomp" "$LOCAL" "$REMOTE"

[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f

[gh]
	protocol = https

[gist]
	private = yes
	browse = yes

[github]
	user = jimlawton
	#token = PLACEHOLDER

[http]
	sslVerify = false
	postBuffer = 524288000

[hub]
    protocol = https

[merge]
	tool = bcomp

[mergetool]
	prompt = false
	keepBackup = false

[mergetool "bcomp"]
    trustExitCode = true
    cmd = "/usr/local/bin/bcomp" "$LOCAL" "$REMOTE" "$BASE" "$MERGED"

[pager]
    diff = false
    branch = false

[push]
	# default = simple
    default = matching

[rebase]
	stat = true

[rerere]
	enabled = true

[status]
	displaycommentprefix = false

[spice "branchCreate"]
	commit = false

[spice "forge.github"]
    url = https://github.cicd.cloud.fpdev.io
    apiUrl = https://github.cicd.cloud.fpdev.io/api
